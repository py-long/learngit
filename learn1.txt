Git 是一个版本控制系统!
cd 进入目录
cd ..返回上一级目录  （cd和..中间有空格）

Git登陆:
	git config --global user.name ""
	git config --global user.email ""
创建版本库的一系列命令：
	cd E:\Git
	mkdir +name
	cd name
	git init 初始化
	pwd 查看当前工作路径
向版本库里面添加文件：
	git add name
	(可以添加多个)
	git commit -m "xxx"
	向Git提交文件 -m后面是本次提交的说明
对文件进行修改后的操作：
	git status   查看当前文件的状态
	git diff    如果被修改，查看修改的内容
	git add name
	(git status)
	git commit -m ""
	(git status)
查看历史：
	git log
	(git log --pretty=oneline)  简洁显示
查看文件内容:
	cat name
回到之前修改版本：
	git reset --hard HEAD^  
	(HEAD 是当前版本 HEAD^ 表示上一次修改 HEAD^^上上次)
	文件内容也变回之前的了
最新的那个版本已经看不到了！好比你从21世纪坐时光穿梭机来到了19世纪，想再回去已经回不去了，肿么办？
只要上面的命令行窗口还没有被关掉，你就可以顺着往上找啊找啊，
找到那个最新版本的commit id，于是就可以指定回到未来的某个版本
	git reset --hard commit id
如果找不到commit id :
	git reflog   (记录了每一次的命令)

git 分为工作区和暂存区:
	git checkout -- file   (把file文件在工作区的修改全部撤销
	一种是file自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
	一种是file已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态)
	
	文件已经add 但是没有commit：
	git reset HEAD file
	
	或者回到上一版本

删除文件:
	rm name   删除文件，但是Git版本库里面还存在，可以用 git checkout -- name 恢复
	git rm name 从版本库里面删除
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删
但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。



远程仓库:
	一:
	$ ssh-keygen -t rsa -C "email"   获取一个 .ssh文件夹，里面有.id_rsa(私匙) .id_rsa_pub(公)
	github-settings-sshkey-new shh key
	'''
	$ git remote add origin git@github.com:py-long/learngit
	$ git remote add origin https://github.com/账户名/仓库
	'''这两种效果一样
	$ git push -u origin master  (这个一定要在仓库目录下，不然会报错)
	完成
	后面就使用 git push origin master 推送就好了

	二:
	先在GitHub创建仓库,勾选 Initialize this repository with a README
	$ git clone git@github.com:py-long/gitskills.git
	
	Git支持多种协议，包括https，但ssh协议速度最快。（两种不同的写法）